package com.example.weather.config;

import org.slf4j.MDC;
import org.springframework.stereotype.Component;
import org.springframework.web.filter.OncePerRequestFilter;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.UUID;

@Component
public class MdcLoggingFilter extends OncePerRequestFilter {

    @Override
    protected void doFilterInternal(HttpServletRequest request,
                                    HttpServletResponse response,
                                    FilterChain filterChain)
            throws ServletException, IOException {

        try {
            // Generate unique IDs for tracking
            String correlationId = UUID.randomUUID().toString();
            String requestId = UUID.randomUUID().toString();

            // Populate MDC
            MDC.put("correlationId", correlationId);
            MDC.put("requestId", requestId);
            MDC.put("clientIp", request.getRemoteAddr());
            MDC.put("userAgent", request.getHeader("User-Agent"));
            MDC.put("requestMethod", request.getMethod());
            MDC.put("requestUri", request.getRequestURI());

            // Add to response headers for client tracking
            response.addHeader("X-Correlation-ID", correlationId);
            response.addHeader("X-Request-ID", requestId);

            filterChain.doFilter(request, response);
        } finally {
            // Clear MDC after request completes
            MDC.clear();
        }
    }
}